<nav class='"relative z-20 col-start-2 lg:col-start-3 xl:col-start-4 2xl:col-start-5 3xl:col-start-6' x-data="{showPref: false, preference: localStorage.getItem('theme'), atTop: true}" x-init="$watch('preference', (val) => { systemPreference(val) });" @scroll.window="atTop = (window.pageYOffset > 30) ? false : true">
    <ul class="flex items-center justify-end space-x-2 md:space-x-4">
        {% block mainnav %}
            {% for item in navigation.mainloggedin %}
                {% include "_partials/site-navigation-item.njk" %}
            {% endfor %}
        {% endblock %}

        <li class="relative ml-2" id="js-colorschemeswitcher">
            <button @click="showPref = !showPref" @click.away="showPref = false" x-bind:aria-label="showPref ? 'Menu sluiten' : 'Menu openen'" x-bind:aria-expanded="showPref" class="flex items-center justify-center w-8 h-8 text-neutral-900 transition-colors duration-500 bg-neutral-300 rounded-full hover:bg-neutral-200 dark:text-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-800">
                {{ '/src/_site/_includes/_icons/svg/hero/solid/sun.svg' | svgContents("flex dark:hidden w-5 h-5 fill-current") | safe }}
                {{ '/src/_site/_includes/_icons/svg/hero/solid/moon.svg' | svgContents("hidden dark:flex w-5 h-5 fill-current") | safe }}
            </button>

            <div class="absolute right-0 z-20 transition-all duration-300 transform opacity-0 top-12 w-36" :aria-expanded="showPref" {# :hidden="!showPref" #} :class="{
            'translate-y-0 opacity-100' : showPref,
            'translate-y-8 pointer-events-none' : !showPref }">

                <script>
                    const root = document.documentElement;
                    const colorSchemeMedia = window.matchMedia("(prefers-color-scheme: dark)");

                    function systemPreference(val) {
                        if (val === "system") {
                            localStorage.removeItem("theme");
                        } else {
                            localStorage.setItem("theme", val);
                        }
                        if (val === "dark" || (val === "system" && colorSchemeMedia.matches)) {
                            root
                                .classList
                                .add("dark");
                        } else {
                            root
                                .classList
                                .remove("dark");
                        }
                    }

                    colorSchemeMedia.addEventListener("change", (e) => {
                        if (e.matches) {
                            root
                                .classList
                                .add("dark");
                        } else {
                            root
                                .classList
                                .remove("dark");
                        }
                    });
                </script>

                {% set options = [
                    [
                        "System Mode", "system", "preference != 'light' && preference != 'dark'"
                    ],
                    [
                        "Light Mode", "light", "preference == 'light'"
                    ],
                    [
                        "Dark Mode", "dark", "preference == 'dark'"
                    ]
                ] %}

                <div class="bg-white border border-neutral-300 rounded-lg dark:bg-neutral-800 dark:border-neutral-600">
                    {% for name, value,
                    state in options %}
                        <button x-on:click="preference = '{{ value }}'" x-bind:tabindex=" showPref ? '3' : '-1' " class="relative block w-full font-medium text-left text-neutral-500 border-t-2 border-neutral-300 rounded cursor-pointer ring-pink-500 ring-offset-4 ring-offset-pink-200 dark:text-neutral-400 hover:text-neutral-600 focus:text-neutral-600 dark:hover:text-neutral-300 dark:focus:text-neutral-300 first:border-0 dark:border-neutral-600 focus-visible:ring-2 dark:ring-offset-pink-800 focus:outline-none">
                            <span class="block px-4 py-2" :class="{'font-bold': {{ state | safe }}}">{{ name | safe }}</span>
                        </button>
                    {% endfor %}
                </div>

            </div>
        </li>

        {% block usericons %}
            <li class="hidden md:flex">
                <button class="flex items-center justify-center w-8 h-8 text-neutral-900 transition-colors duration-500 bg-neutral-300 rounded-full hover:bg-neutral-200 dark:text-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-800">
                    {{ '/src/_site/_includes/_icons/svg/hero/solid/bell.svg' | svgContents("w-5 h-5 fill-current") | safe }}
                </button>
            </li>

            <li class="hidden ml-0 md:flex">
                <button class="flex items-center justify-center w-8 h-8 text-neutral-900 transition-colors duration-500 bg-neutral-300 rounded-full hover:bg-neutral-200 dark:text-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-800">
                    {{ '/src/_site/_includes/_icons/svg/hero/solid/shopping-bag.svg' | svgContents("w-5 h-5 fill-current") | safe }}
                </button>
            </li>

            <li>
                <button class="flex items-center justify-center w-10 h-10 transition-colors duration-500 bg-white rounded-full hover:bg-neutral-200 dark:text-neutral-300 dark:bg-neutral-700 dark:hover:bg-neutral-800">
                    <span class='flex items-center justify-center w-8 h-8 overflow-hidden rounded-full'>
                        <img src="/media/images/userplaceholder.jpg" alt="ThisIsAnExtraLongUserName" aria-hidden="true" class="object-cover min-w-full min-h-full max-w-7xl ">
                    </span>
                </button>

            </li>
        {% endblock %}
    </ul>
</nav>